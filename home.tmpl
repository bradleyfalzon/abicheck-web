<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>abicheck</title>

<style>
* { box-sizing: border-box; }
textarea:focus {
    outline: 0;
}
textarea {
    width: 100%;
    background: #E9EFF0;
    font-family: monospace;
    font-size: 16px;
    padding: 10px;
    border: 1px solid #ccc;
}
h1, h2 { color: #114B5F; }
h2 { font-weight: 200; }
p { line-height: 1.3em; }
html { font-family: sans-serif; font-size: 16px; color: #333; }
footer { text-align: center; }
a { text-decoration: none; }
a:hover { text-decoration: underline; }

.grid { display: flex; margin-bottom: 20px; }
.grid-cell { width: 50%; padding: 0 20px; }
pre { background: #E9EFF0; padding: 20px; line-height: 1.5em; }
button {
    font-weight: bold;
    font-size: 1em;
    background-color: #114B5F;
    color: white;
    padding: 10px;
    border: none;
}
</style>

  </head>
  <body>

    <h1>Demo service for abicheck</h1>

    <p>abicheck is a tool to detect backwards incompatible changes for Go projects which would otherwise cause consumers' projects to fail to build. See <a href="https://github.com/bradleyfalzon/abicheck">github.com/bradleyfalzon/abicheck</a> for status and gurantees.</p>

    <p>This tool could be added to a CI process to help raise an alert when a backwards incompatible change is merged, futher it could detect and suggest VCS semver tag changes.</p>

    <p>This was created before Gophercon 2016 to scratch a personal itch, and may or may not be suitable in these vendoring discussions.</p>

<form method="post">
    <div class="grid">
    <div class="grid-cell">
    <h2>Revision 1</h2>
    <textarea name="prev" rows="20">{{ if .Prev }}{{ .Prev }}{{ else }}package example

import "io"

var Exported int = 42
var private int = 42

type Inter interface {
    // Add Member1()
}

type Str struct {
    Member1 int
}

func F1(_ io.WriteCloser) {}
func F2() {}
{{ end }}
</textarea>
    </div>
    <div class="grid-cell">
    <h2>Revision 2</h2>
    <textarea name="next" rows="20">{{ if .Next }}{{ .Next }}{{ else }}package example

import "io"

var Exported uint = 42
var private uint = 42

type Inter interface {
    Member1()
}

type Str struct {
    // Remove Member1 int
}

func F1(_ io.Writer) {}
func F2(_ ...string) {}
{{ end }}
</textarea>
    </div>
    </div>

    <div><button>Check for Changes</button></div>

    </form>

    {{ if .Results }}
    <h2>Results</h2>
    <pre>{{ .Results }}</pre>{{ end }}

    <footer>
	<hr>
	<a href="https://twitter.com/bradleyfalzon">@bradleyfalzon</a> | <a href="https://github.com/bradleyfalzon/abicheck">GitHub</a>
</footer>
  </body>
</html>
